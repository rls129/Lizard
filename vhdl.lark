%ignore WS
root: entity*  architechture*

entity: "entity" IDENTIFIER "is" portdecl?  "end"  ("entity" )? (IDENTIFIER )? ";"

portdecl: "port"  "(" port  (";"  port  )*  ")"  ";"
port:  IDENTIFIER  ":"  PORTDIRECTION  PORTTYPE

PORTTYPE: "std_ulogic" | "std_logic"
PORTDIRECTION: "in" | "out" | "inout" | "direction"

architechture: "architecture"  IDENTIFIER  "of"  IDENTIFIER "is"  archsignal*  archdefination  "end"  "architecture"? IDENTIFIER?  ";"
archsignal: "signal" IDENTIFIER ":" IDENTIFIER ("<=" value  )?  ";"

archdefination: "begin"  (process)*
process: shorthandprocess | longformprocess
shorthandprocess: IDENTIFIER  "<=" value ";"

longformprocess: (IDENTIFIER ":")? "process" sensitivity_list? "is" variables* "begin" statements "end" "process" ";"
statements: statement+
statement: shorthandprocess | variable_assignment | wait | report | if_statement | while_statement
if_statement: "if" condition "then" statements elsif* else? "end" "if" ";"
elsif: ("elsif" condition "then" statements)
else: ("else" statements)
while_statement: "while" condition "loop" statements "end" "loop" ";"
// condition: value | "(" value ")"
!condition: "(" condition ")" | (condition "and" condition) | (condition "or" condition) | ("not" condition) | (value "=" value) | (value "/=" value)| value // TODO: add more conditions
sensitivity_list: "(" IDENTIFIER ("," IDENTIFIER)* ")"
variable_assignment: IDENTIFIER  ":=" value ";"
variables: "variable" IDENTIFIER ":" IDENTIFIER (":=" value)? ";"
wait: (("wait" "for" INT TIME) | "wait") ";"
report: "report" ESCAPED_STRING "severity" ERROR_LEVEL ";"
ERROR_LEVEL: "error" | "warning"

value: IDENTIFIER | literal | "(" value ")" | binary_expression | unary_expression
binary_expression: value BINARY_OPERATOR value
BINARY_OPERATOR: "and"| "or"| "nand"| "nor"| "xor"| "+"| "-"| "&" | "=" | "/="
unary_expression: UNARY_OPERATOR value
UNARY_OPERATOR: "not"

BVALUE: ("b"|"B")? "\"" /[0,1]+/ "\""
OVALUE: ("o"|"O")"\""("0"|"1"|"2"|"3"|"4"|"5"|"6"|"7")*"\""
XVALUE: ("x"|"X") "\"" /[0,1,2,3,4,5,6,7,8,9,a,b,c,,d,e,f]+/ "\""
BIT_LITERAL: /[0,1,h,l,u,w,x,z,-]/
CHARACTER_LITERAL: /'\w'/
STRING: ESCAPED_STRING
literal: BVALUE|OVALUE|XVALUE|INT|STRING|"'" BIT_LITERAL "'"|CHARACTER_LITERAL


COMMENT: "--" /[^\n]*/ "\n"
%ignore COMMENT

%import common.WS
%import common.WORD
%import common.CNAME
%import common.ESCAPED_STRING
%import common.INT
TIME: "ns" | "ms" | "us" | "s"
IDENTIFIER: CNAME